@implements Davis.Core.IDavisPlugin
@implements IDisposable


<div class="p-3">
    <div class="form-floating mb-3">
        <textarea value="@_pattern"
                  @onchange="OnRegexStrChange"
                  @onchange:stopPropagation="true"
                  class="form-control"
                  placeholder="pattern"
                  id="pattern"
                  style="height: 150px">
        </textarea>
        <label for="json">pattern</label>
    </div>

    <div class="form-floating mb-3">
        <textarea value="@_text" @onchange="OnTextChange" @onchange:stopPropagation="true"
                  class="form-control"
                  placeholder="text"
                  id="text" style="height: 150px">
        </textarea>
        <label for="text">text</label>
    </div>
    @if (_matchCollection != null)
    {
        if (_matchCollection.Count == 0)
        {
            <div>
                not found match string
            </div>
        }
        else
        {
            <ul class="list-group list-group-flush mb-3">
                @foreach (System.Text.RegularExpressions.Match match in _matchCollection)
                {
                    <li class="list-group-item">@match.Value</li>
                }
            </ul>
        }
    }


    <footer class="d-flex justify-content-end mb-3">
        <a href="/" class="btn btn-light">返回</a> &nbsp;&nbsp;
        <button @onclick="@OnOk" type="button" class="btn btn-primary">确定</button>
    </footer>
</div>


@code {
    [CascadingParameter]
    public Davis.Core.IPluginContext Context { get; set; } = default!;


    public override async Task SetParametersAsync(ParameterView parameters)
    {
        await base.SetParametersAsync(parameters);
        await Context.LoadCss("bootstrap/bootstrap.min.css");
    }


    public void Dispose()
    {
        _ = Context.UnLoadCss("bootstrap/bootstrap.min.css");
    }
}
